{"version":3,"sources":["analytics.js","components/AnalyticsViewPage.js","components/Footer.js","components/NumberInput.js","components/EntryAndStopLoss.js","components/PercentageInput.js","components/Fees.js","components/Result.js","util.js","components/RiskPerPosition.js","components/Securities.js","components/TotalCapital.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["analytics","Analytics","app","plugins","googleAnalytics","trackingId","AnalyticsViewPage","page","Footer","className","href","target","rel","InputGroupWrapper","children","disabled","NumberInput","decimalScale","onChange","useInputGroup","value","thousandSeparator","decimalSeparator","allowNegative","allowEmptyFormatting","allowLeadingZeros","displayType","type","onValueChange","values","floatValue","isNaN","EntryAndStopLoss","entry","onChangeEntry","onChangeStopLoss","stopLoss","PercentageInput","e","percentage","parseFloat","min","max","step","Fees","buy","onChangeBuy","onChangeSell","sell","Result","loss","lots","defaultValues","totalCapital","riskPerPositionInPercentage","securityCompany","buyFeeInPercentage","sellFeeInPercentage","entryPrice","stopLossPrice","saveDefaultValues","localStorage","setItem","JSON","stringify","calculateRiskPerPositionInNumber","securityCompanies","name","buyFee","sellFee","RiskPerPosition","useState","riskPerPositionInNumber","setRiskPerPositionInNumber","useEffect","Securities","setBuy","setSell","security","find","map","i","key","TotalCapital","Form","setTotalCapital","setRiskPerPositionInPercentage","setSecurity","setBuyFee","setSellFee","setEntryPrice","setStopLossPrice","setLoss","setLots","onSubmit","preventDefault","alert","buyInLotWithFee","sellInLotWithFee","Math","floor","calculateLots","calculateLoss","track","getItem","parse","initializeDefaultValues","App","role","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2e8ea00e.chunk.js","sourcesContent":["import Analytics from 'analytics';\nimport googleAnalytics from '@analytics/google-analytics';\n\nconst analytics = Analytics({\n  app: 'awesome-app',\n  plugins: [\n    googleAnalytics({\n      trackingId: 'UA-79154045-3'\n    })\n  ]\n});\n\nexport default analytics;\n","import analytics from '../analytics';\n\nfunction AnalyticsViewPage() {\n  analytics.page();\n\n  return null;\n}\n\nexport default AnalyticsViewPage;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"container\">\n      <p className=\"text-center\">\n        Created by <a\n          href=\"https://rymanalu.github.io/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >Roni Yusuf</a>\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport NumberFormat from 'react-number-format';\n\nfunction InputGroupWrapper ({ children, disabled = false }) {\n  if (disabled) {\n    return children;\n  }\n\n  return (\n    <div className=\"input-group\">\n      <div className=\"input-group-prepend\">\n        <span className=\"input-group-text\">Rp</span>\n      </div>\n      {children}\n    </div>\n  );\n}\n\nfunction NumberInput({\n  decimalScale = 0,\n  disabled = false,\n  onChange = () => {},\n  useInputGroup = true,\n  value\n}) {\n  return (\n    <InputGroupWrapper disabled={!useInputGroup}>\n      <NumberFormat\n        thousandSeparator=\".\"\n        decimalSeparator=\",\"\n        decimalScale={decimalScale}\n        allowNegative={false}\n        allowEmptyFormatting={false}\n        allowLeadingZeros={false}\n        value={value}\n        displayType=\"input\"\n        type=\"text\"\n        onValueChange={values => {\n          const { floatValue, value } = values;\n\n          if (isNaN(floatValue)) {\n            onChange(value);\n          } else {\n            onChange(floatValue);\n          }\n        }}\n        className=\"form-control\"\n        disabled={disabled}\n      />\n    </InputGroupWrapper>\n  );\n}\n\nexport default NumberInput;\n","import React from 'react';\nimport NumberInput from './NumberInput';\n\nfunction EntryAndStopLoss({\n  entry,\n  onChangeEntry,\n  onChangeStopLoss,\n  stopLoss\n}) {\n  return (\n    <div className=\"form-group\">\n      <div className=\"form-row\">\n        <div className=\"form-group col-md-6 col-sm-6\">\n          <label>Entry</label>\n          <NumberInput onChange={onChangeEntry} value={entry} />\n        </div>\n        <div className=\"form-group col-md-6 col-sm-6\">\n          <label>Stop Loss</label>\n          <NumberInput onChange={onChangeStopLoss} value={stopLoss} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default EntryAndStopLoss;\n","import React from 'react';\n\nfunction PercentageInput({ disabled = false, onChange, value }) {\n  return (\n    <div className=\"input-group\">\n      <input\n        type=\"number\"\n        className=\"form-control\"\n        value={value}\n        onChange={e => {\n          const { value } = e.target;\n\n          const percentage = parseFloat(value);\n\n          if (isNaN(percentage)) {\n            onChange(value);\n          } else {\n            onChange(percentage);\n          }\n        }}\n        min=\"0\"\n        max=\"100\"\n        step=\"0.01\"\n        disabled={disabled}\n      />\n      <div className=\"input-group-append\">\n        <span className=\"input-group-text\">%</span>\n      </div>\n    </div>\n  );\n}\n\nexport default PercentageInput;\n","import React from 'react';\nimport PercentageInput from './PercentageInput';\n\nfunction Fees({ buy, disabled = false, onChangeBuy, onChangeSell, sell }) {\n  return (\n    <div className=\"form-group\">\n      <div className=\"form-row\">\n        <div className=\"form-group col-md-6 col-sm-6\">\n          <PercentageInput\n            onChange={onChangeBuy}\n            value={buy}\n            disabled={disabled}\n          />\n          <small className=\"form-text text-muted\">Fee beli.</small>\n        </div>\n        <div className=\"form-group col-md-6 col-sm-6\">\n          <PercentageInput\n            onChange={onChangeSell}\n            value={sell}\n            disabled={disabled}\n          />\n          <small className=\"form-text text-muted\">Fee jual.</small>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Fees;\n","import React from 'react';\nimport NumberInput from './NumberInput';\n\nfunction Result({ loss, lots }) {\n  return (\n    <div className=\"form-group\">\n      <div className=\"form-row\">\n        <div className=\"form-group col-md-6 col-sm-6\">\n          <label>Jumlah Lot</label>\n          <NumberInput disabled useInputGroup={false} value={lots} />\n          <small className=\"form-text text-muted\">\n            Maksimal lot untuk dibeli.\n          </small>\n        </div>\n        <div className=\"form-group col-md-6 col-sm-6\">\n          <label>Kerugian</label>\n          <NumberInput disabled value={loss} />\n          <small className=\"form-text text-muted\">\n            Nominal potensi kerugian (sudah termasuk fee beli dan jual).\n          </small>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Result;\n","export const DEFAULT_VALUES_KEY = 'defaultValues';\n\nexport const INPUT_FEE_MANUAL = 'Input fee manual...';\n\nexport const LOT = 100;\n\nexport const defaultValues = {\n  totalCapital: 100000000,\n  riskPerPositionInPercentage: 1,\n  securityCompany: INPUT_FEE_MANUAL,\n  buyFeeInPercentage: 0.15,\n  sellFeeInPercentage: 0.25,\n  entryPrice: 1000,\n  stopLossPrice: 950\n};\n\nexport const saveDefaultValues = defaultValues => {\n  localStorage.setItem(DEFAULT_VALUES_KEY, JSON.stringify(defaultValues));\n};\n\nexport const initializeDefaultValues = () => {\n  const values = localStorage.getItem(DEFAULT_VALUES_KEY);\n\n  if (values === null) {\n    saveDefaultValues(defaultValues);\n\n    return defaultValues;\n  }\n\n  return JSON.parse(values);\n};\n\nexport const calculateRiskPerPositionInNumber = (totalCapital, percentage) => (\n  totalCapital * percentage / 100\n);\n\nexport const calculateLoss = (\n  lots,\n  entryPrice,\n  stopLossPrice,\n  buyFee,\n  sellFee\n) => {\n  const buy = entryPrice * lots * LOT;\n  const buyWithFee = buy + (buy * buyFee / 100);\n\n  const sell = stopLossPrice * lots * LOT;\n  const sellWithFee = sell - (sell * sellFee / 100);\n\n  return buyWithFee - sellWithFee;\n};\n\nexport const calculateLots = (\n  totalCapital,\n  riskPerPositionInPercentage,\n  entryPrice,\n  stopLossPrice,\n  buyFee,\n  sellFee\n) => {\n  const buyInLot = entryPrice * LOT;\n  const buyInLotWithFee = buyInLot + (entryPrice * buyFee);\n\n  const sellInLot = stopLossPrice * LOT;\n  const sellInLotWithFee = sellInLot - (stopLossPrice * sellFee);\n\n  const riskPerPositionInNumber = calculateRiskPerPositionInNumber(\n    totalCapital, riskPerPositionInPercentage\n  );\n\n  return Math.floor(\n    riskPerPositionInNumber / (buyInLotWithFee - sellInLotWithFee)\n  );\n};\n\nexport const securityCompanies = [\n  {\n    name: INPUT_FEE_MANUAL,\n    buyFee: 0.15,\n    sellFee: 0.25\n  },\n  {\n    name: 'BNI Sekuritas',\n    buyFee: 0.17,\n    sellFee: 0.27\n  },\n  {\n    name: 'Indo Premier Sekuritas',\n    buyFee: 0.19,\n    sellFee: 0.29\n  },\n  {\n    name: 'Lotus Andalan Sekuritas',\n    buyFee: 0.15,\n    sellFee: 0.25\n  },\n  {\n    name: 'Mandiri Sekuritas',\n    buyFee: 0.18,\n    sellFee: 0.28\n  },\n  {\n    name: 'Maybank Kim Eng Sekuritas',\n    buyFee: 0.17,\n    sellFee: 0.27\n  },\n  {\n    name: 'Mirae Asset Sekuritas',\n    buyFee: 0.15,\n    sellFee: 0.25\n  },\n  {\n    name: 'MNC Sekuritas',\n    buyFee: 0.18,\n    sellFee: 0.28\n  },\n  {\n    name: 'NH Korindo Sekuritas',\n    buyFee: 0.18,\n    sellFee: 0.28\n  },\n  {\n    name: 'Panin Sekuritas',\n    buyFee: 0.20,\n    sellFee: 0.30\n  },\n  {\n    name: 'Phillip Sekuritas Indonesia',\n    buyFee: 0.18,\n    sellFee: 0.28\n  },\n  {\n    name: 'RHB Sekuritas Indonesia',\n    buyFee: 0.15,\n    sellFee: 0.25\n  },\n  {\n    name: 'Sinarmas Sekuritas',\n    buyFee: 0.15,\n    sellFee: 0.25\n  },\n  {\n    name: 'Sucor Sekuritas',\n    buyFee: 0.15,\n    sellFee: 0.25\n  },\n  {\n    name: 'Valbury Sekuritas Indonesia',\n    buyFee: 0.15,\n    sellFee: 0.25\n  }\n];\n","import React, { useState, useEffect } from 'react';\nimport NumberInput from './NumberInput';\nimport PercentageInput from './PercentageInput';\nimport { calculateRiskPerPositionInNumber } from '../util';\n\nfunction RiskPerPosition({ onChange, totalCapital, value }) {\n  const [\n    riskPerPositionInNumber, setRiskPerPositionInNumber\n  ] = useState(calculateRiskPerPositionInNumber(totalCapital || 0, value));\n\n  useEffect(() => {\n    setRiskPerPositionInNumber(\n      calculateRiskPerPositionInNumber(totalCapital || 0, value)\n    );\n  }, [totalCapital, value]);\n\n  return (\n    <fieldset className=\"form-group\">\n      <legend className=\"col-form-label\">Risiko Per Posisi</legend>\n      <div className=\"form-row\">\n        <div className=\"form-group col-md-6 col-sm-6\">\n          <PercentageInput\n            onChange={value => {\n              onChange(value);\n\n              setRiskPerPositionInNumber(\n                calculateRiskPerPositionInNumber(totalCapital, value)\n              );\n            }}\n            value={value}\n          />\n          <small className=\"form-text text-muted\">\n            Persentase risiko per posisi terhadap Total Modal.\n          </small>\n        </div>\n        <div className=\"form-group col-md-6 col-sm-6\">\n          <NumberInput disabled value={riskPerPositionInNumber} />\n          <small className=\"form-text text-muted\">\n            Nominal risiko per posisi.\n          </small>\n        </div>\n      </div>\n    </fieldset>\n  );\n}\n\nexport default RiskPerPosition;\n","import React from 'react';\nimport { securityCompanies } from '../util';\n\nfunction Securities({ onChange, setBuy, setSell, value }) {\n  return (\n    <div className=\"form-group\">\n      <label>Pengaturan Fee</label>\n      <select\n        className=\"form-control\"\n        onChange={e => {\n          const { value } = e.target;\n\n          const security = securityCompanies.find(\n            security => security.name === value\n          );\n\n          onChange(security.name);\n          setBuy(security.buyFee);\n          setSell(security.sellFee);\n        }}\n        value={value}\n      >\n      {securityCompanies.map((security, i) => (\n        <option key={i} value={security.name}>{security.name}</option>\n      ))}\n      </select>\n      <small className=\"form-text text-muted\">\n        Atur fee berdasarkan sekuritas atau input manual.\n      </small>\n    </div>\n  );\n}\n\nexport default Securities;\n","import React from 'react';\nimport NumberInput from './NumberInput';\n\nfunction TotalCapital({ onChange, value }) {\n  return (\n    <div className=\"form-group\">\n      <label>Total Modal</label>\n      <NumberInput onChange={onChange} value={value} />\n      <small className=\"form-text text-muted\">\n        Nominal total modal akun trading Anda.\n      </small>\n    </div>\n  );\n}\n\nexport default TotalCapital;\n","import React, { useState } from 'react';\nimport EntryAndStopLoss from './EntryAndStopLoss';\nimport Fees from './Fees';\nimport Result from './Result';\nimport RiskPerPosition from './RiskPerPosition';\nimport Securities from './Securities';\nimport TotalCapital from './TotalCapital';\nimport analytics from '../analytics';\nimport {\n  calculateLoss,\n  calculateLots,\n  INPUT_FEE_MANUAL,\n  saveDefaultValues\n} from '../util';\n\nfunction Form ({ defaultValues }) {\n  const [totalCapital, setTotalCapital] = useState(defaultValues.totalCapital);\n  const [\n    riskPerPositionInPercentage,\n    setRiskPerPositionInPercentage\n  ] = useState(defaultValues.riskPerPositionInPercentage);\n  const [security, setSecurity] = useState(defaultValues.securityCompany);\n  const [buyFee, setBuyFee] = useState(defaultValues.buyFeeInPercentage);\n  const [sellFee, setSellFee] = useState(defaultValues.sellFeeInPercentage);\n  const [entryPrice, setEntryPrice] = useState(defaultValues.entryPrice);\n  const [\n    stopLossPrice, setStopLossPrice\n  ] = useState(defaultValues.stopLossPrice);\n  const [loss, setLoss] = useState(0);\n  const [lots, setLots] = useState(0);\n\n  return (\n    <form onSubmit={e => {\n      e.preventDefault();\n\n      if (stopLossPrice > entryPrice) {\n        alert('Stop Loss tidak boleh lebih besar dari Entry!');\n        return;\n      }\n\n      const lots = calculateLots(\n        totalCapital,\n        riskPerPositionInPercentage,\n        entryPrice,\n        stopLossPrice,\n        buyFee,\n        sellFee\n      );\n\n      setLots(lots);\n      setLoss(calculateLoss(lots, entryPrice, stopLossPrice, buyFee, sellFee));\n\n      analytics.track('calculate');\n\n      saveDefaultValues({\n        totalCapital,\n        riskPerPositionInPercentage,\n        securityCompany: security,\n        buyFeeInPercentage: buyFee,\n        sellFeeInPercentage: sellFee,\n        entryPrice,\n        stopLossPrice\n      });\n    }}>\n      <TotalCapital onChange={setTotalCapital} value={totalCapital} />\n      <RiskPerPosition\n        onChange={setRiskPerPositionInPercentage}\n        totalCapital={totalCapital}\n        value={riskPerPositionInPercentage}\n      />\n      <Securities\n        onChange={setSecurity}\n        setBuy={setBuyFee}\n        setSell={setSellFee}\n        value={security}\n      />\n      <Fees\n        buy={buyFee}\n        onChangeBuy={setBuyFee}\n        onChangeSell={setSellFee}\n        sell={sellFee}\n        disabled={security !== INPUT_FEE_MANUAL}\n      />\n      <EntryAndStopLoss\n        entry={entryPrice}\n        onChangeEntry={setEntryPrice}\n        onChangeStopLoss={setStopLossPrice}\n        stopLoss={stopLossPrice}\n      />\n      <div className=\"form-group\">\n        <button\n          type=\"submit\"\n          className=\"btn btn-secondary btn-lg btn-block\"\n        >\n          Hitung\n        </button>\n      </div>\n      <Result loss={loss} lots={lots} />\n    </form>\n  );\n}\n\nexport default Form;\n","import React, { Fragment } from 'react';\nimport AnalyticsViewPage from './components/AnalyticsViewPage';\nimport Footer from './components/Footer';\nimport Form from './components/Form';\nimport { initializeDefaultValues } from './util';\n\nconst defaultValues = initializeDefaultValues();\n\nfunction App() {\n  return (\n    <Fragment>\n      <main role=\"main\">\n        <div className=\"container\">\n          <div className=\"row justify-content-md-center\">\n            <div className=\"col-lg-6 col-md-8 col-sm-12\">\n              <h1 className=\"text-center\">Lot Calculator</h1>\n              <Form defaultValues={defaultValues} />\n            </div>\n          </div>\n        </div>\n      </main>\n      <hr />\n      <Footer />\n      <AnalyticsViewPage />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}